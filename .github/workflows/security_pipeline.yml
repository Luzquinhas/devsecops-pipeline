name: DevSecOps Security Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  static-analysis:
    runs-on: ubuntu-latest
    permissions:
      security-events: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Run Semgrep SAST Scan
        run: |
          docker run --rm -v "${PWD}:/src" semgrep/semgrep semgrep \
          --config="p/owasp-top-ten" --sarif --output semgrep-results.sarif \
          || true

      - name: Upload Semgrep SARIF to GitHub Security
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: semgrep-results.sarif

      - name: Set up Node.js for Snyk
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install Snyk CLI
        run: npm install -g snyk

      - name: Install Python dependencies for Snyk
        run: pip install -r app/requirements.txt

      - name: Run Snyk SCA Scan
        working-directory: ./app
        run: snyk monitor --file=requirements.txt --fail-on=high --severity-threshold=high
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

  dynamic-analysis:
    runs-on: ubuntu-latest
    needs: [static-analysis]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build Docker image for the application
        run: docker build -t financial-api:latest .

      - name: Create a Docker network
        run: docker network create scan-net

      - name: Run application in background on the new network
        run: docker run -d --network scan-net --name api -p 8000:8000 financial-api:latest
      
      - name: Wait for application to start
        run: sleep 20

      - name: Run OWASP ZAP Baseline Scan
        run: |
          docker run --rm \
            --user root \
            -v $(pwd):/zap/wrk/:rw \
            --network scan-net \
            ghcr.io/zaproxy/zaproxy:stable zap-baseline.py -t http://api:8000 -r report.html

      - name: Upload DAST Scan Report
        uses: actions/upload-artifact@v4
        with:
          name: dast-report
          path: report.html
