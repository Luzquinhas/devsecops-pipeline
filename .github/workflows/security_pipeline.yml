name: DevSecOps Security Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  sast-analysis:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Run Semgrep SAST Scan
        run: |
          docker run --rm -v "${PWD}:/src" semgrep/semgrep semgrep --config="p/owasp-top-ten" --error .

  sca-analysis:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: pip install -r app/requirements.txt
      
      - name: Run Snyk SCA Scan
        uses: snyk/actions/python@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          command: monitor
          # A forma correta de passar múltiplos argumentos é em linhas separadas
          args: >
            --file=app/requirements.txt
            --fail-on=high
            --severity-threshold=high

  build-and-run-for-dast:
    runs-on: ubuntu-latest
    # Este job só roda se os scans estáticos passarem
    needs: [sast-analysis, sca-analysis]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build Docker image
        run: docker build -t financial-api:latest .

      - name: Run application in background
        run: docker run -d --name api -p 8000:8000 financial-api:latest
      
      - name: Wait for application to start
        run: sleep 15

  dast-analysis:
    runs-on: ubuntu-latest
    needs: build-and-run-for-dast
    steps:
      - name: Run OWASP ZAP Baseline Scan
        run: |
          docker run --rm -v $(pwd):/zap/wrk/:rw --network="host" \
          owasp/zap2docker-stable zap-baseline.py -t http://127.0.0.1:8000 -r report.html \
          || true
